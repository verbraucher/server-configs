version: '3.8'
volumes:
  n8n_storage:
  postgres_storage:
#  ollama_storage:
#  qdrant_storage:
networks:
  demo:
x-n8n: &service-n8n
  image: n8nio/n8n:latest
  networks: ['demo']
  environment:
    - DB_TYPE=postgresdb
    - DB_POSTGRESDB_HOST=postgres
    - DB_POSTGRESDB_USER=${POSTGRES_USER}
    - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
    - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
    - N8N_DIAGNOSTICS_ENABLED=false
    - N8N_PERSONALIZATION_ENABLED=false
    - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
    - N8N_USER_MANAGEMENT_JWT_SECRET=${N8N_USER_MANAGEMENT_JWT_SECRET}
    - GENERIC_TIMEZONE=${GENERIC_TIMEZONE}
    - N8N_DEFAULT_LOCALE=${N8N_DEFAULT_LOCALE}
  depends_on:
    postgres:
      condition: service_healthy
#x-ollama: &service-ollama
#  image: ollama/ollama:latest
#  networks: ['demo']
#  restart: unless-stopped
#  ports:
#    - 11434:11434
#  volumes:
#    - ollama_storage:/root/.ollama
services:
  postgres:
    image: postgres:16-alpine
    networks: ['demo']
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_storage:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    ports:
      - "5433:5432"
  n8n-import:
    <<: *service-n8n
    container_name: n8n-import
    restart: "no"
    entrypoint: /bin/sh
    command:
      - "-c"
      - |
        echo "Waiting for database to be ready..."
        while ! nc -z postgres 5432; do
          sleep 1
        done
        echo "Database is ready. Starting import..."
        n8n import:credentials --separate --input=/backup/credentials || true
        n8n import:workflow --separate --input=/backup/workflows || true
        touch /home/node/.n8n/import_done
        exit 0
    volumes:
      - ./n8n/backup:/backup
      - n8n_storage:/home/node/.n8n
    depends_on:
      postgres:
        condition: service_healthy
  n8n:
    <<: *service-n8n
    container_name: n8n
    restart: unless-stopped
    ports:
      - 5678:5678
    volumes:
      - n8n_storage:/home/node/.n8n
      - ./n8n/backup:/backup
      - ./shared:/data/shared
    depends_on:
      postgres:
        condition: service_healthy
      n8n-import:
        condition: service_completed_successfully
    entrypoint: /bin/sh
    command:
      - "-c"
      - |
        echo 'Waiting for dependencies...'
        while ! nc -z postgres 5432 || [ ! -f /home/node/.n8n/import_done ]; do
          sleep 1
        done
        echo 'Dependencies are ready. Starting n8n...'
        sleep 5
        n8n

#  qdrant:
#    image: qdrant/qdrant
#    container_name: qdrant
#    networks: ['demo']
#    restart: unless-stopped
#    ports:
#      - 6333:6333
#    volumes:
#      - qdrant_storage:/qdrant/storage

#  ollama:
#    <<: *service-ollama
#    container_name: ollama
#  ollama-init:
#    image: ollama/ollama:latest
#    networks: ['demo']
#    volumes:
#      - ollama_storage:/root/.ollama
#    entrypoint: /bin/sh
#    command:
#      - "-c"
#      - "sleep 10; OLLAMA_HOST=ollama:11434 ollama pull llama3.1; OLLAMA_HOST=ollama:11434 ollama pull nomic-embed-text"
#    depends_on:
#      - ollama
